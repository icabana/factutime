<?phpclass EgresosModel extends ModelBase {      function getTodosEgresos() {     $query = "select   fac_egresos.ID_EGRESO,                         fac_egresos.CLIENTE_EGRESO,                        fac_egresos.VENDEDOR_EGRESO,                        fac_egresos.CONSECUTIVO_EGRESO,                        fac_egresos.FECHA_EGRESO,                        fac_egresos.VALOR_EGRESO,                        fac_egresos.TIPO_EGRESO,                        fac_egresos.OBSERVACIONES_EGRESO,                        fac_egresos.FORMAPAGO_EGRESO,                        fac_egresos.NUMTRANSACCION_EGRESO,                        tbl_proveedores.ID_PROVEEDOR,                         tbl_proveedores.DOCUMENTO_PROVEEDOR,                        tbl_proveedores.NOMBRE_PROVEEDOR,                        tbl_proveedores.TELEFONO_PROVEEDOR,                        tbl_proveedores.CORREO_PROVEEDOR,                        tbl_proveedores.DIRECCION_PROVEEDOR                        from fac_egresos left join tbl_proveedores ON fac_egresos.CLIENTE_EGRESO = tbl_proveedores.ID_PROVEEDOR                         where fac_egresos.CONSECUTIVO_EGRESO != ''" ;                $consulta = $this->consulta($query);               return $consulta;                          }        function getEgresosEntreFechas($FECHA1, $FECHA2) {     $query = "select   fac_egresos.ID_EGRESO,                         fac_egresos.CLIENTE_EGRESO,                        fac_egresos.VENDEDOR_EGRESO,                        fac_egresos.CONSECUTIVO_EGRESO,                        fac_egresos.FECHA_EGRESO,                        fac_egresos.VALOR_EGRESO,                        fac_egresos.TIPO_EGRESO,                        fac_egresos.OBSERVACIONES_EGRESO,                        fac_egresos.FORMAPAGO_EGRESO,                        fac_egresos.NUMTRANSACCION_EGRESO,                        tbl_proveedores.ID_PROVEEDOR,                         tbl_proveedores.DOCUMENTO_PROVEEDOR,                        tbl_proveedores.NOMBRE_PROVEEDOR,                        tbl_proveedores.TELEFONO_PROVEEDOR,                        tbl_proveedores.CORREO_PROVEEDOR,                        tbl_proveedores.DIRECCION_PROVEEDOR                        from fac_egresos left join tbl_proveedores ON fac_egresos.CLIENTE_EGRESO = tbl_proveedores.ID_PROVEEDOR                         where fac_egresos.CONSECUTIVO_EGRESO != '' AND fac_egresos.FECHA_EGRESO BETWEEN '".$FECHA1."' AND '".$FECHA2."'" ;                $consulta = $this->consulta($query);               return $consulta;                          }        function getEgresosPorCliente($CLIENTE_EGRESO) {     $query = "select   fac_egresos.ID_EGRESO,                         fac_egresos.CLIENTE_EGRESO,                        fac_egresos.VENDEDOR_EGRESO,                        fac_egresos.CONSECUTIVO_EGRESO,                        fac_egresos.FECHA_EGRESO,                        fac_egresos.VALOR_EGRESO,                        fac_egresos.TIPO_EGRESO,                        fac_egresos.OBSERVACIONES_EGRESO,                        fac_egresos.FORMAPAGO_EGRESO,                        fac_egresos.NUMTRANSACCION_EGRESO,                        tbl_proveedores.ID_PROVEEDOR,                         tbl_proveedores.DOCUMENTO_PROVEEDOR,                        tbl_proveedores.NOMBRE_PROVEEDOR,                        tbl_proveedores.TELEFONO_PROVEEDOR,                        tbl_proveedores.CORREO_PROVEEDOR,                        tbl_proveedores.DIRECCION_PROVEEDOR                        from fac_egresos left join tbl_proveedores ON fac_egresos.CLIENTE_EGRESO = tbl_proveedores.ID_PROVEEDOR                         where fac_egresos.CONSECUTIVO_EGRESO != '' and CLIENTE_EGRESO = '".$CLIENTE_EGRESO."'" ;                $consulta = $this->consulta($query);               return $consulta;                          }      function getDatosEgreso($ID_EGRESO) {            $query = "select   fac_egresos.ID_EGRESO,                         fac_egresos.CLIENTE_EGRESO,                        fac_egresos.CONSECUTIVO_EGRESO,                        fac_egresos.FECHA_EGRESO,                        fac_egresos.VALOR_EGRESO,                        fac_egresos.VENDEDOR_EGRESO,                        fac_egresos.TIPO_EGRESO,                        fac_egresos.OBSERVACIONES_EGRESO,                        fac_egresos.FORMAPAGO_EGRESO,                        fac_egresos.NUMTRANSACCION_EGRESO,                       tbl_proveedores.ID_PROVEEDOR,                         tbl_proveedores.DOCUMENTO_PROVEEDOR,                        tbl_proveedores.NOMBRE_PROVEEDOR,                        tbl_proveedores.TELEFONO_PROVEEDOR,                        tbl_proveedores.CORREO_PROVEEDOR,                        tbl_proveedores.DIRECCION_PROVEEDOR                        from fac_egresos left join tbl_proveedores ON fac_egresos.CLIENTE_EGRESO = tbl_proveedores.ID_PROVEEDOR                         where fac_egresos.ID_EGRESO = '".$ID_EGRESO."'";                 $consulta = $this->consulta($query);        return $consulta[0];                }        function insertarEgreso($TIPO_EGRESO) {                        $query = "INSERT INTO fac_egresos (FECHA_EGRESO, TIPO_EGRESO)		VALUES('".  date("Y-m-d")."', '".$TIPO_EGRESO."');";               return $this->crear_ultimo_id($query);                   }                function guardarEgreso($FECHA_EGRESO, $CLIENTE_EGRESO, $VENDEDOR_EGRESO, $VALOR_EGRESO, $TIPO_EGRESO, $OBSERVACIONES_EGRESO, $FORMAPAGO_EGRESO, $NUMTRANSACCION_EGRESO, $CONSECUTIVO_EGRESO) {              $query = "INSERT fac_egresos(FECHA_EGRESO, CLIENTE_EGRESO, VENDEDOR_EGRESO, VALOR_EGRESO, TIPO_EGRESO, OBSERVACIONES_EGRESO, CONSECUTIVO_EGRESO, FORMAPAGO_EGRESO, NUMTRANSACCION_EGRESO) VALUES('".$FECHA_EGRESO."','".$CLIENTE_EGRESO."', '".utf8_decode($VENDEDOR_EGRESO)."', '".$VALOR_EGRESO."', '".utf8_decode($TIPO_EGRESO)."', '".utf8_decode($OBSERVACIONES_EGRESO)."', '".$CONSECUTIVO_EGRESO."', '".$FORMAPAGO_EGRESO."', '".$NUMTRANSACCION_EGRESO."');";       return $this->crear_ultimo_id($query);    }    function editarEgreso($ID_EGRESO, $FECHA_EGRESO, $CLIENTE_EGRESO, $VENDEDOR_EGRESO, $VALOR_EGRESO, $TIPO_EGRESO, $OBSERVACIONES_EGRESO, $FORMAPAGO_EGRESO, $NUMTRANSACCION_EGRESO) {       $query = "UPDATE fac_egresos  SET FECHA_EGRESO = '".utf8_decode($FECHA_EGRESO)."', CLIENTE_EGRESO = '".$CLIENTE_EGRESO."', VENDEDOR_EGRESO = '".utf8_decode($VENDEDOR_EGRESO)."', VALOR_EGRESO = '".$VALOR_EGRESO."', TIPO_EGRESO = '".utf8_decode($TIPO_EGRESO)."', OBSERVACIONES_EGRESO = '".utf8_decode($OBSERVACIONES_EGRESO)."', FORMAPAGO_EGRESO = '".utf8_decode($FORMAPAGO_EGRESO)."', NUMTRANSACCION_EGRESO = '".utf8_decode($NUMTRANSACCION_EGRESO)."'        WHERE ID_EGRESO = '" . $ID_EGRESO . "'";       return $this->modificarRegistros($query);    }    function eliminarEgreso($ID_EGRESO) {                $query = "DELETE FROM fac_egresos WHERE ID_EGRESO = '". $ID_EGRESO ."'";        $this->modificarRegistros($query);    }        function getConsecutivo() {     $query = "select MAX(fac_egresos.CONSECUTIVO_EGRESO) as mayor                from fac_egresos";         $consulta = $this->consulta($query);        return $consulta[0]['mayor'];                }                    function getTotalEgresosPorMes($MES, $TIPO_EGRESO) {     $query = "select   sum(fac_egresos.VALOR_EGRESO) as total                        from fac_egresos                         where substr(fac_egresos.FECHA_EGRESO, 6, 2) = ".$MES." AND fac_egresos.TIPO_EGRESO = '".$TIPO_EGRESO."'" ;                $consulta = $this->consulta($query);                               return $consulta[0]['total'];                          }      }?>